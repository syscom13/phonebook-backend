{"version":3,"sources":["services/persons.js","components/Person.js","components/Persons.js","components/Form.js","components/Search.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","getAll","a","axios","get","response","data","create","newObject","post","update","id","put","remove","delete","console","log","Person","person","handleDelete","name","number","onClick","Persons","persons","searchTerm","renderedPersons","filter","toLowerCase","includes","map","key","Form","newName","newPhoneNumber","handleNameChange","handlePhoneNumberChange","addPerson","onSubmit","value","onChange","type","Search","handleSearchChange","Fragment","Notification","message","classText","className","payload","App","useState","setPersons","setNewName","setNewPhoneNumber","setSearchTerm","error","setError","success","setSuccess","useEffect","personsService","personsList","setTimeout","fetchPersons","sanitize","input","trim","resetFormInputs","e","preventDefault","nameExists","some","alert","updatePhoneNumber","personObject","returnedPerson","concat","window","confirm","find","deletePerson","p","target","ReactDOM","render","document","getElementById"],"mappings":"iQACMA,EAAU,eAsBD,GACXC,OArBQ,uCAAG,4BAAAC,EAAA,sEACYC,IAAMC,IAAIJ,GADtB,cACLK,EADK,yBAEJA,EAASC,MAFL,2CAAH,qDAqBAC,OAhBA,uCAAG,WAAMC,GAAN,eAAAN,EAAA,sEACYC,IAAMM,KAAKT,EAASQ,GADhC,cACLH,EADK,yBAEJA,EAASC,MAFL,2CAAH,sDAgBQI,OAXR,uCAAG,WAAOC,EAAIH,GAAX,eAAAN,EAAA,sEACYC,IAAMS,IAAN,UAAaZ,EAAb,YAAwBW,GAAMH,GAD1C,cACLH,EADK,yBAEJA,EAASC,MAFL,2CAAH,wDAWgBO,OANhB,uCAAG,WAAMF,GAAN,eAAAT,EAAA,sEACYC,IAAMW,OAAN,UAAgBd,EAAhB,YAA2BW,IADvC,OACLN,EADK,OAEXU,QAAQC,IAAIX,GAFD,2CAAH,uDCJGY,EAZA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACtB,OACI,4BACI,4BAAKD,EAAOE,MACZ,4BAAKF,EAAOG,QACZ,4BACI,4BAAQC,QAAS,kBAAMH,EAAaD,KAApC,aCiBDK,EAtBC,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,WAAYN,EAAmB,EAAnBA,aAC9BO,EAAmBF,EAAQG,QAAO,SAAAT,GACpC,OAAOA,EAAOE,KAAKQ,cAAcC,SAASJ,EAAWG,kBACtDE,KAAI,SAAAZ,GACH,OACI,kBAAC,EAAD,CACIa,IAAKb,EAAOP,GACZO,OAAQA,EACRC,aAAcA,OAK1B,OACI,+BACI,+BACKO,KCeFM,EAhCF,SAAC,GAMP,IALHC,EAKE,EALFA,QACAC,EAIE,EAJFA,eACAC,EAGE,EAHFA,iBACAC,EAEE,EAFFA,wBACAC,EACE,EADFA,UAEA,OACI,0BAAMC,SAAUD,GACZ,qCAEI,2BACIE,MAAON,EACPO,SAAUL,EACVM,KAAK,UAGb,6CAEI,2BACIF,MAAOL,EACPM,SAAUJ,EACVK,KAAK,UAGb,6BACI,4BAAQA,KAAK,UAAb,UCbDC,EAbA,SAAC,GAAwC,IAAtCjB,EAAqC,EAArCA,WAAYkB,EAAyB,EAAzBA,mBAC1B,OACI,kBAAC,IAAMC,SAAP,6BAEI,2BACIL,MAAOd,EACPe,SAAUG,EACVF,KAAK,WCQNI,EAfM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,GAAgB,OAAZA,EACA,OAAO,KAGX,IAAMC,EAA6B,UAAjBD,EAAQL,KAAmB,QAAU,UAEvD,OACI,yBAAKO,UAAWD,GACXD,EAAQG,UC8JNC,EAlKH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACP3B,EADO,KACE4B,EADF,OAEgBD,mBAAS,IAFzB,mBAEPlB,EAFO,KAEEoB,EAFF,OAG8BF,mBAAS,IAHvC,mBAGPjB,EAHO,KAGSoB,EAHT,OAIsBH,mBAAS,IAJ/B,mBAIP1B,EAJO,KAIK8B,EAJL,OAKYJ,mBAAS,MALrB,mBAKPK,EALO,KAKAC,EALA,OAMgBN,mBAAS,MANzB,mBAMPO,EANO,KAMEC,EANF,KAQdC,qBAAU,YACY,uCAAG,4BAAA1D,EAAA,+EAEa2D,EAAe5D,SAF5B,OAEP6D,EAFO,OAGbV,EAAWU,GAHE,gDAKbL,EAAS,oDACTM,YAAW,WACPN,EAAS,QACV,KARU,yDAAH,qDAYlBO,KACD,IAEH,IAGMC,EAAW,SAAAC,GAAK,OAAIA,EAAMC,QAC1BC,EAAkB,WACpBf,EAAW,IACXC,EAAkB,KAGhBjB,EAAS,uCAAG,WAAMgC,GAAN,mBAAAnE,EAAA,yDACdmE,EAAEC,mBACIC,EAAa/C,EAAQgD,MAAK,SAAAtD,GAAM,OAAIA,EAAOE,OAAS6C,EAAShC,QAEhDC,EAJL,gBAKVuC,MAAM,GAAD,OAAIR,EAAShC,GAAb,uCALK,2BAMHsC,IAAcrC,EANX,iCAOJwC,IAPI,sCASJC,EAAe,CACjBvD,KAAM6C,EAAShC,GACfZ,OAAQ4C,EAAS/B,IAXX,oBAeuB2B,EAAetD,OAAOoE,GAf7C,QAeAC,EAfA,OAgBNxB,EAAW5B,EAAQqD,OAAOD,IAC1BjB,EAAW,GAAD,OAAIiB,EAAexD,KAAnB,4BACV2C,YAAW,WACPJ,EAAW,QACZ,KACHS,IArBM,mDAuBNX,EAAS,IAAD,OAAKkB,EAAavD,KAAlB,yCACR2C,YAAW,WACPN,EAAS,QACV,KA1BG,2DAAH,sDA+BTiB,EAAiB,uCAAG,8BAAAxE,EAAA,0DACE4E,OAAOC,QAAP,UAAkBd,EAAShC,GAA3B,kFADF,wBAIZ0C,EAJY,2BAKXnD,EAAQwD,MAAK,SAAA9D,GAAM,OAAIA,EAAOE,OAAS6C,EAAShC,OALrC,IAMdZ,OAAQ4C,EAAS/B,KANH,kBASe2B,EAAenD,OAAOiE,EAAahE,GAAIgE,GATtD,OASRC,EATQ,OAUdxB,EAAW5B,EAAQM,KAAI,SAAAZ,GAAM,OAAIA,EAAOE,OAASa,EAAU2C,EAAiB1D,MAC5EyC,EAAW,GAAD,OAAIiB,EAAexD,KAAnB,6CACV2C,YAAW,WACPJ,EAAW,QACZ,KACHS,IAfc,kDAiBdX,EAAS,sBAAD,OAAuBkB,EAAavD,KAApC,+CACR2C,YAAW,WACPN,EAAS,QACV,KApBW,0DAAH,qDAyBjBwB,EAAY,uCAAG,WAAM/D,GAAN,iBAAAhB,EAAA,yDACTkB,EAAaF,EAAbE,KAAMT,EAAOO,EAAPP,IACImE,OAAOC,QAAP,0CAAkD3D,EAAlD,MAFD,0CAMHyC,EAAehD,OAAOF,GANnB,OAOTyC,EAAW5B,EAAQG,QAAO,SAAAuD,GAAC,OAAIA,EAAEvE,KAAOA,MACxCgD,EAAW,GAAD,OAAIvC,EAAJ,oCACV2C,YAAW,WACPJ,EAAW,QACZ,KAXM,kDAaTF,EAAS,GAAD,OAAIrC,EAAJ,0BACR2C,YAAW,WACPN,EAAS,QACV,KAhBM,0DAAH,sDAuClB,OACI,yBAAKT,UAAU,mBACX,yCACA,kBAAC,EAAD,CACIF,QArBJU,EACO,CACHf,KAAM,QACNQ,QAASO,GAIbE,EACO,CACHjB,KAAM,UACNQ,QAASS,GAIV,OASH,6BACI,kBAAC,EAAD,CACIjC,WAAYA,EACZkB,mBA/GW,SAAA0B,GAAC,OAAId,EAAcc,EAAEc,OAAO5C,WAkH/C,6BACI,6CACA,kBAAC,EAAD,CACIN,QAASA,EACTC,eAAgBA,EAChBC,iBAzHS,SAAAkC,GAAC,OAAIhB,EAAWgB,EAAEc,OAAO5C,QA0HlCH,wBAzHgB,SAAAiC,GAAC,OAAIf,EAAkBe,EAAEc,OAAO5C,QA0HhDF,UAAWA,KAGnB,6BACI,uCACA,kBAAC,EAAD,CACIb,QAASA,EACTC,WAAYA,EACZN,aAAc8D,O,MC5JlCG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cbd7c1e4.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nconst create = async newObject => {\n    const response = await axios.post(baseUrl, newObject)\n    return response.data\n}\n\nconst update = async (id, newObject) => {\n    const response = await axios.put(`${baseUrl}/${id}`, newObject)\n    return response.data\n}\n\nconst remove = async id => {\n    const response = await axios.delete(`${baseUrl}/${id}`)\n    console.log(response)\n}\n\nexport default {\n    getAll, create, update, remove\n}","import React from 'react'\n\nconst Person = ({ person, handleDelete }) => {\n    return (\n        <tr>\n            <td>{person.name}</td>\n            <td>{person.number}</td>\n            <td>\n                <button onClick={() => handleDelete(person)}>Delete</button>\n            </td>\n        </tr>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, searchTerm, handleDelete }) => {\n    const renderedPersons =  persons.filter(person => {\n        return person.name.toLowerCase().includes(searchTerm.toLowerCase())\n    }).map(person => {\n        return (\n            <Person \n                key={person.id} \n                person={person} \n                handleDelete={handleDelete}\n            />\n        )\n    })\n\n    return (\n        <table>\n            <tbody>\n                {renderedPersons}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Form = ({ \n    newName, \n    newPhoneNumber, \n    handleNameChange, \n    handlePhoneNumberChange, \n    addPerson\n}) => {\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                Name: \n                <input\n                    value={newName}\n                    onChange={handleNameChange}\n                    type=\"text\"\n                />\n            </div>\n            <div>\n                Phone Number: \n                <input\n                    value={newPhoneNumber}\n                    onChange={handlePhoneNumberChange}\n                    type=\"text\"\n                />\n            </div>\n            <div>\n                <button type=\"submit\">Add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default Form","import React from 'react'\n\nconst Search = ({ searchTerm, handleSearchChange }) => {\n    return (\n        <React.Fragment>\n            Filter shown with&nbsp;\n            <input\n                value={searchTerm}\n                onChange={handleSearchChange}\n                type=\"text\"\n            />\n        </React.Fragment>\n    )\n}\n\nexport default Search","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    const classText = message.type === 'error' ? 'error' : 'success'\n\n    return (\n        <div className={classText}>\n            {message.payload}\n        </div>\n    )\n\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\nimport Persons from './components/Persons'\nimport Form from './components/Form'\nimport Search from './components/Search'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newPhoneNumber, setNewPhoneNumber] = useState('')\n    const [searchTerm, setSearchTerm] = useState('')\n    const [error, setError] = useState(null)\n    const [success, setSuccess] = useState(null)\n\n    useEffect(() => {\n        const fetchPersons = async () => {\n            try {\n                const personsList = await personsService.getAll()\n                setPersons(personsList)\n            } catch (error) {\n                setError('There was en error fetching data from the server')\n                setTimeout(() => {\n                    setError(null)\n                }, 5000)\n            }\n        }\n\n        fetchPersons()\n    }, [])\n\n    const handleNameChange = e => setNewName(e.target.value)\n    const handlePhoneNumberChange = e => setNewPhoneNumber(e.target.value)\n    const handleSearchChange = e => setSearchTerm(e.target.value)\n    const sanitize = input => input.trim()\n    const resetFormInputs = () => {\n        setNewName('')\n        setNewPhoneNumber('')\n    }\n\n    const addPerson = async e => {\n        e.preventDefault()\n        const nameExists = persons.some(person => person.name === sanitize(newName))\n\n        if (nameExists && !newPhoneNumber) {\n            alert(`${sanitize(newName)} is already added to the phonebook`)\n        } else if (nameExists && newPhoneNumber) {\n            await updatePhoneNumber()\n        } else {\n            const personObject = {\n                name: sanitize(newName),\n                number: sanitize(newPhoneNumber)\n            }\n\n            try {\n                const returnedPerson = await personsService.create(personObject)\n                setPersons(persons.concat(returnedPerson))\n                setSuccess(`${returnedPerson.name} was added successfully`)\n                setTimeout(() => {\n                    setSuccess(null)\n                }, 5000)\n                resetFormInputs()\n            } catch (error) {\n                setError(`\"${personObject.name}\" could not be saved to the database`)\n                setTimeout(() => {\n                    setError(null)\n                }, 5000)\n            }\n        }\n    }\n\n    const updatePhoneNumber = async () => {\n        const updateConfirmed = window.confirm(`${sanitize(newName)} was already added to the phonebook, replace the old number with the new one?`)\n\n        if (updateConfirmed) {\n            const personObject = { \n                ...persons.find(person => person.name === sanitize(newName)), \n                number: sanitize(newPhoneNumber) \n            }\n            try {\n                const returnedPerson = await personsService.update(personObject.id, personObject)\n                setPersons(persons.map(person => person.name === newName ? returnedPerson : person))\n                setSuccess(`${returnedPerson.name}'s phone number was updated successfully`)\n                setTimeout(() => {\n                    setSuccess(null)\n                }, 5000)\n                resetFormInputs()\n            } catch (error) {\n                setError(`Informations about ${personObject.name} have already been deleted from the server`)\n                setTimeout(() => {\n                    setError(null)\n                }, 5000)\n            }\n        }\n    }\n\n    const deletePerson = async person => {\n        const { name, id } = person\n        const confirmed = window.confirm(`Are you sure you want to delete ${name}?`)\n\n        if (confirmed) {\n            try {\n                await personsService.remove(id)\n                setPersons(persons.filter(p => p.id !== id))\n                setSuccess(`${name} was deleted from the phonebook`)\n                setTimeout(() => {\n                    setSuccess(null)\n                }, 5000)\n            } catch (error) {\n                setError(`${name} could not be removed`)\n                setTimeout(() => {\n                    setError(null)\n                }, 5000)\n            }\n        }\n    }\n\n    const getMessage = () => {\n        if (error) {\n            return {\n                type: 'error',\n                payload: error\n            }\n        }\n\n        if (success) {\n            return {\n                type: 'success',\n                payload: success\n            }\n        }\n\n        return null\n    }\n\n    return (\n        <div className=\"small container\">\n            <h1>Phonebook</h1>\n            <Notification \n                message={getMessage()} \n            />\n            <div>\n                <Search\n                    searchTerm={searchTerm}\n                    handleSearchChange={handleSearchChange}\n                />\n            </div>\n            <div>\n                <h2>Add a Contact</h2>\n                <Form\n                    newName={newName}\n                    newPhoneNumber={newPhoneNumber}\n                    handleNameChange={handleNameChange}\n                    handlePhoneNumberChange={handlePhoneNumberChange}\n                    addPerson={addPerson}\n                />\n            </div>\n            <div>\n                <h2>Numbers</h2>\n                <Persons \n                    persons={persons} \n                    searchTerm={searchTerm} \n                    handleDelete={deletePerson}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}